{"version":3,"sources":["components/Tweets/Tweet.js","api/fetchTweets.js","api/postTweet.js","api/index.js","components/Tweets/CreateTweet.js","components/Loading/Loading.js","components/Tweets/Tweets.js","components/NavBar/NavBar.js","components/UserLog/LoginForm.js","components/UserLog/Login.js","components/UserLog/SignUpForm.js","components/UserLog/SignUp.js","App.js","index.js"],"names":["Tweet","data","modifiedText","id","text","split","map","t","i","splitBySpace","key","ss","j","to","slice","className","disabled","fetchTweets","a","axios","get","url","reverseList","length","push","console","error","postTweet","tweet","post","headers","Authorization","defaults","xsrfCookieName","xsrfHeaderName","CreateTweetForm","props","state","textvalue","value","this","setState","handleTweetSubmition","rows","onChange","e","handlechange","target","placeholder","onClick","preventDefault","style","opacity","Component","Loading","Tweets","returnedData","prevState","tweets","CreateTweet","NavBar","loggedIn","LoginForm","handleChange","name","username","password","handleLogIn","onSubmit","type","Login","checkLogInfo","localStorage","setItem","log","SignUpForm","SignUp","App","getItem","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0877bc44.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Tweet = ({ data: { id, text } }) => {\n    const textList = text.split(\"\\n\");\n    const modifiedText = textList.map((t, i) => {\n        const splitBySpace = t.split(\" \");\n        return (\n            <p key={i}>\n                {splitBySpace.map((ss, j) =>\n                    ss[0] === \"@\" || ss[0] === \"#\" ? (\n                        <Link key={j} to={ss.slice(1)}>\n                            {` ${ss}`}\n                        </Link>\n                    ) : (\n                        ` ${ss}`\n                    )\n                )}\n            </p>\n        );\n    });\n    return (\n        <div className=\"tweet-wrapper\">\n            <div className=\"user-info\">\n                <div className=\"user-avater\">U</div>\n                <p className=\"user-name\">User Name</p>\n                <p className=\"user-id\">@user_id</p>\n            </div>\n            <div className=\"tweet-text\">{modifiedText}</div>\n            <div className=\"btns\">\n                <button className=\"tweet-btn like\" disabled={true}>\n                    Like\n                </button>\n                <button className=\"tweet-btn comment\" disabled={true}>\n                    Comment\n                </button>\n                <button className=\"tweet-btn share\" disabled={true}>\n                    Share\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Tweet;\n","import axios from \"axios\";\nimport { url } from \"./index\";\n\nconst fetchTweets = async () => {\n    try {\n        const { data } = await axios.get(`${url}/tweets`);\n        let reverseList = [];\n        for (let i = data.length - 1; i >= 0; i--) {\n            reverseList.push(data[i]);\n        }\n        return reverseList;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport default fetchTweets;\n","import axios from \"axios\";\nimport { url } from \"./index\";\n\nconst postTweet = async (tweet) => {\n    const { data } = await axios.post(\n        `${url}/tweets/`,\n        { text: tweet },\n        {\n            headers: {\n                Authorization: `AUTHORIZATION_KEY`,\n                \"Content-Type\": \"application/json\",\n            },\n        }\n    );\n    return data;\n};\nexport default postTweet;\n","import fetchTweets from \"./fetchTweets\";\nimport postTweet from \"./postTweet\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nconst url = \"http://localhost:8000/api\";\n\nexport { fetchTweets, postTweet, url };\n","import React, { Component } from \"react\";\n\nexport class CreateTweetForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            textvalue: \"\",\n        };\n    }\n\n    handlechange(value) {\n        this.setState({ textvalue: value });\n    }\n\n    render() {\n        const { textvalue } = this.state;\n        const { handleTweetSubmition } = this.props;\n        return (\n            <div className=\"create-tweet-form tweet-wrapper\">\n                <textarea\n                    rows=\"2\"\n                    value={textvalue}\n                    onChange={(e) => this.handlechange(e.target.value)}\n                    placeholder=\"Make a Tweet\"\n                ></textarea>\n                <button\n                    onClick={(e) => {\n                        e.preventDefault();\n                        handleTweetSubmition(textvalue);\n                        this.setState({ textvalue: \"\" });\n                    }}\n                    disabled={textvalue === \"\"}\n                    style={{\n                        opacity: textvalue === \"\" ? \"0.5\" : \"1\",\n                    }}\n                >\n                    Tweet\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default CreateTweetForm;\n","import React from \"react\";\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            <div />\n            <div />\n            <div />\n        </div>\n    );\n}\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport Tweet from \"./Tweet\";\nimport { fetchTweets, postTweet } from \"../../api\";\nimport CreateTweet from \"./CreateTweet\";\nimport Loading from \"../Loading/Loading\";\n\nexport class Tweets extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tweets: [],\n        };\n    }\n\n    async componentDidMount() {\n        const data = await fetchTweets();\n        this.setState({ tweets: data });\n    }\n\n    handleTweetSubmition = async (tweet) => {\n        const returnedData = await postTweet(tweet);\n        this.setState((prevState) => {\n            return {\n                tweets: [returnedData, ...prevState.tweets],\n            };\n        });\n    };\n\n    render() {\n        const { tweets } = this.state;\n        return tweets.length > 0 ? (\n            <div className=\"tweets-wrapper\">\n                <CreateTweet handleTweetSubmition={this.handleTweetSubmition} />\n                {tweets.map((tweet, key) => (\n                    <Tweet key={key} data={tweet} />\n                ))}\n            </div>\n        ) : (\n            <Loading />\n        );\n    }\n}\n\nexport default Tweets;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar({ loggedIn }) {\n    return (\n        <header className=\"nav-bar\">\n            <nav className=\"nav wrapper\">\n                <Link to=\"/\" className=\"nav-logo\">\n                    Twitter Clone\n                </Link>\n                <ul className=\"nav-menu\">\n                    <Link to=\"/\">Home</Link>\n                    <Link to=\"/\">All Tweets</Link>\n                </ul>\n                {loggedIn ? (\n                    <ul className=\"user-log\">\n                        <Link to=\"/\">User Name</Link>\n                        <Link to=\"/\">Logout</Link>\n                    </ul>\n                ) : (\n                    <ul className=\"user-log\">\n                        <Link to=\"/login\">Log in</Link>\n                    </ul>\n                )}\n            </nav>\n        </header>\n    );\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class LoginForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n        };\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e;\n        this.setState(\n            name === \"username\"\n                ? { username: value }\n                : name === \"password\"\n                ? { password: value }\n                : null\n        );\n    };\n\n    render() {\n        const { username, password } = this.state;\n        const { handleLogIn } = this.props;\n        return (\n            <form\n                className=\"log-form login-form\"\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    handleLogIn(username, password);\n                    this.setState({ username: \"\", password: \"\" });\n                }}\n            >\n                <input\n                    type=\"text\"\n                    placeholder=\"username\"\n                    name=\"username\"\n                    value={username}\n                    onChange={(e) => this.handleChange(e.target)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={(e) => this.handleChange(e.target)}\n                />\n                <button>Log In</button>\n                <p>\n                    Don't have an account? <Link to=\"/signup\">Sign Up</Link>{\" \"}\n                </p>\n            </form>\n        );\n    }\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport axios from \"axios\";\nconst url = \"http://localhost:8000/rest-auth/login/\";\n\nconst Login = ({ checkLogInfo }) => {\n    const handleLogIn = async (username, password) => {\n        try {\n            const {\n                data: { key },\n            } = await axios.post(\n                url,\n                {\n                    username,\n                    password,\n                },\n                {\n                    headers: {\n                        Authorization: `AUTHORIZATION_KEY`,\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n            localStorage.setItem(\"token\", key);\n            checkLogInfo();\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    return (\n        <div>\n            <LoginForm handleLogIn={handleLogIn} />\n        </div>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SignUpForm = () => {\n    return (\n        <form className=\"log-form login-form\">\n            <input type=\"text\" placeholder=\"username\" />\n            <input type=\"text\" placeholder=\"First Name\" />\n            <input type=\"text\" placeholder=\"Last Name\" />\n            <input type=\"password\" placeholder=\"Password\" name=\"password1\" />\n            <input\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                name=\"password2\"\n            />\n            <button>Sign Up</button>\n            <p>\n                Already have an account? <Link to=\"/login\">Log In</Link>{\" \"}\n            </p>\n        </form>\n    );\n};\n\nexport default SignUpForm;\n","import React, { Component } from \"react\";\nimport SignUpForm from \"./SignUpForm\";\n\nexport class SignUp extends Component {\n    render() {\n        return (\n            <div>\n                <SignUpForm />\n            </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Tweets } from \"./components/Tweets\";\nimport { NavBar } from \"./components/NavBar\";\nimport Login from \"./components/UserLog/Login\";\nimport SignUp from \"./components/UserLog/SignUp\";\n\nexport class App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: false,\n        };\n    }\n\n    componentDidMount() {\n        this.checkLogInfo();\n    }\n\n    checkLogInfo = () => {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            this.setState({ loggedIn: true });\n        } else {\n            this.setState({ loggedIn: false });\n        }\n    };\n\n    render() {\n        const { loggedIn } = this.state;\n        return (\n            <Router>\n                <NavBar loggedIn={loggedIn} />\n                <div className=\"wrapper\">\n                    <Route path=\"/\" exact component={Tweets} />\n                    <Route\n                        path=\"/login\"\n                        exact\n                        component={() => (\n                            <Login checkLogInfo={this.checkLogInfo} />\n                        )}\n                    />\n                    <Route path=\"/signup\" exact component={SignUp} />\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./static/css/main.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}