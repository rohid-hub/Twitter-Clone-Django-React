{"version":3,"sources":["components/Tweets/Tweet.js","api/fetchTweets.js","api/postTweet.js","api/index.js","components/Tweets/CreateTweet.js","components/Tweets/Tweets.js","components/NavBar/NavBar.js","App.js","index.js"],"names":["Tweet","data","modifiedText","id","text","split","map","t","i","splitBySpace","key","ss","j","to","slice","className","disabled","fetchTweets","a","axios","get","url","reverseList","length","push","console","error","postTweet","tweet","post","headers","Authorization","defaults","xsrfCookieName","xsrfHeaderName","CreateTweetForm","props","state","textvalue","value","this","setState","handleTweetSubmition","rows","onChange","e","handlechange","target","placeholder","onClick","preventDefault","style","opacity","Component","Tweets","returnedData","prevState","tweets","CreateTweet","NavBar","loggedIn","App","path","exact","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6d3d8cef.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Tweet = ({ data: { id, text } }) => {\n    const textList = text.split(\"\\n\");\n    const modifiedText = textList.map((t, i) => {\n        const splitBySpace = t.split(\" \");\n        return (\n            <p key={i}>\n                {splitBySpace.map((ss, j) =>\n                    ss[0] === \"@\" || ss[0] === \"#\" ? (\n                        <Link key={j} to={ss.slice(1)}>\n                            {` ${ss}`}\n                        </Link>\n                    ) : (\n                        ` ${ss}`\n                    )\n                )}\n            </p>\n        );\n    });\n    return (\n        <div className=\"tweet-wrapper\">\n            <div className=\"user-info\">\n                <div className=\"user-avater\">U</div>\n                <p className=\"user-name\">User Name</p>\n                <p className=\"user-id\">@user_id</p>\n            </div>\n            <div className=\"tweet-text\">{modifiedText}</div>\n            <div className=\"btns\">\n                <button className=\"tweet-btn like\" disabled={true}>\n                    Like\n                </button>\n                <button className=\"tweet-btn comment\" disabled={true}>\n                    Comment\n                </button>\n                <button className=\"tweet-btn share\" disabled={true}>\n                    Share\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Tweet;\n","import axios from \"axios\";\nimport { url } from \"./index\";\n\nconst fetchTweets = async () => {\n    try {\n        const { data } = await axios.get(`${url}/tweets`);\n        let reverseList = [];\n        for (let i = data.length - 1; i >= 0; i--) {\n            reverseList.push(data[i]);\n        }\n        return reverseList;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport default fetchTweets;\n","import axios from \"axios\";\nimport { url } from \"./index\";\n\nconst postTweet = async (tweet) => {\n    const { data } = await axios.post(\n        `${url}/tweets/`,\n        { text: tweet },\n        {\n            headers: {\n                Authorization: `AUTHORIZATION_KEY`,\n                \"Content-Type\": \"application/json\",\n            },\n        }\n    );\n    return data;\n};\nexport default postTweet;\n","import fetchTweets from \"./fetchTweets\";\nimport postTweet from \"./postTweet\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nconst url = \"http://localhost:8000/api\";\n\nexport { fetchTweets, postTweet, url };\n","import React, { Component } from \"react\";\n\nexport class CreateTweetForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            textvalue: \"\",\n        };\n    }\n\n    handlechange(value) {\n        this.setState({ textvalue: value });\n    }\n\n    render() {\n        const { textvalue } = this.state;\n        const { handleTweetSubmition } = this.props;\n        return (\n            <div className=\"create-tweet-form tweet-wrapper\">\n                <textarea\n                    rows=\"2\"\n                    value={textvalue}\n                    onChange={(e) => this.handlechange(e.target.value)}\n                    placeholder=\"Make a Tweet\"\n                ></textarea>\n                <button\n                    onClick={(e) => {\n                        e.preventDefault();\n                        handleTweetSubmition(textvalue);\n                        this.setState({ textvalue: \"\" });\n                    }}\n                    disabled={textvalue === \"\"}\n                    style={{\n                        opacity: textvalue === \"\" ? \"0.5\" : \"1\",\n                    }}\n                >\n                    Tweet\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default CreateTweetForm;\n","import React, { Component } from \"react\";\nimport Tweet from \"./Tweet\";\nimport { fetchTweets, postTweet } from \"../../api\";\nimport CreateTweet from \"./CreateTweet\";\n\nexport class Tweets extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tweets: [],\n        };\n    }\n\n    async componentDidMount() {\n        const data = await fetchTweets();\n        this.setState({ tweets: data });\n    }\n\n    handleTweetSubmition = async (tweet) => {\n        const returnedData = await postTweet(tweet);\n        this.setState((prevState) => {\n            return {\n                tweets: [returnedData, ...prevState.tweets],\n            };\n        });\n    };\n\n    render() {\n        const { tweets } = this.state;\n        return tweets.length > 0 ? (\n            <div className=\"tweets-wrapper\">\n                <CreateTweet handleTweetSubmition={this.handleTweetSubmition} />\n                {tweets.map((tweet, key) => (\n                    <Tweet key={key} data={tweet} />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nexport default Tweets;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar({ loggedIn }) {\n    return (\n        <header className=\"nav-bar wrapper\">\n            <nav className=\"nav\">\n                <Link to=\"/\" className=\"nav-logo\">\n                    Twitter Clone\n                </Link>\n                <ul className=\"nav-menu\">\n                    <Link to=\"/\">Home</Link>\n                    <Link to=\"/\">All Tweets</Link>\n                </ul>\n                {loggedIn ? (\n                    <ul className=\"user-log\">\n                        <Link to=\"/\">User Name</Link>\n                        <Link to=\"/\">Logout</Link>\n                    </ul>\n                ) : (\n                    <ul className=\"user-log\">\n                        <Link to=\"/admin\">Log in</Link>\n                        <Link to=\"/\">Sign up</Link>\n                    </ul>\n                )}\n            </nav>\n        </header>\n    );\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Tweets } from \"./components/Tweets\";\nimport { NavBar } from \"./components/NavBar\";\n\nexport class App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: false,\n        };\n    }\n\n    render() {\n        const { loggedIn } = this.state;\n        return (\n            <Router>\n                <NavBar loggedIn={loggedIn} />\n                <div className=\"wrapper\">\n                    <Route path=\"/\" exact>\n                        <Tweets />\n                    </Route>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./static/css/main.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}